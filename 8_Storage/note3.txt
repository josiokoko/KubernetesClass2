Storage in Kubernetes:
- Sharing of data by containers in a Pod
- Sharing of data by Pods
- Persisting data beyond the life cycle of a Pod

Kubernetes support different kinds of storage:
- block
- file
- object

Volumes:
- All storage are exposed as volumes in Kubernetes

	(1) Ephemeral volumes:
		- volume life cycle = the Pod life cycle
		- If a container restarts, the new container will have access to the same volume
		- Once Pod terminates, the volume is gone!

	(2) Persistent Volume 
		- Solves the challenges with ephemeral volume

Ephemeral volumes

	emptyDir()
		- an empty directory that is created when a Pod is assigned to a node
		- Only exists as long as the Pod exits
		- Containers can write to and read from it 

	hostPath()
	- Use to mount file or a directory from the host node's filesystem to a Pod

	Persistent Volume:
		- k8s object for users and administrators
		- abstracts details of how storage is provided from how it is consumed
		- There are 2 resource type provided by k8s:
			(1) PersistentVolume (PV)
				- a piece of storage in the cluster
				- like storage, PV are volume plugins
				- a resource in the cluster like any other objects
			(2) PersistentVolumeClaim (PVC)

PersistentVolume (PV) Object:
- Static PV
	- PersistentVolume object
	- PersistentVolumeClaim object
	- Create volumes and volumeMounts

- Dynamic PV (Using Storage Class)
	- StorageClass => dynamically creates PV on claim
	- PersistentVolumeClaim object
	- Create volumes and volumeMount

Volume:
	Create volumes and volumeMount
	(1) .spec.volumes field defines volume for a Pod
    (2) .spec.containers.volumeMounts defines where to mount those Volumes in individual containers

